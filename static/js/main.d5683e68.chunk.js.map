{"version":3,"sources":["components/Header.js","components/Section.js","components/Calculation.js","components/CardLeft.js","components/CardRight.js","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Container","fontSize","Menu","RightMenu","styled","div","Section","backgroundImg","description","backgroundPosition","bg","ps","top","props","Calculation","useState","weight","setWeight","level","setLevel","bench","setBench","ref","useRef","calculateSets","sets","ratio","workingSets","totalReps","totalRatio","i","push","exerciseWeight","Math","floor","exerciseReps","createData","exerciseName","exerciseSets","oneRepMax","workingSet","createDataPower","createDataHyper","createDataDumbbell","Row","row","React","open","setOpen","Fragment","TableRow","sx","borderBottom","TableCell","align","IconButton","size","onClick","color","component","scope","style","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","Box","margin","Typography","variant","gutterBottom","fontStyle","Table","TableHead","fontWeight","TableBody","map","workingSetRow","chest","shoulders","arms","back","legs","Calc","bottom","HeightWeight","TextField","id","label","onChange","val","target","value","FormControl","m","minWidth","InputLabel","Select","labelId","event","MenuItem","Button","current","scrollIntoView","behavior","computeData","BottomMenu","Results","TableContainer","Paper","elevation","marginBottom","width","CardLeft","exerciseImage","exercise","tipOne","tipTwo","tipThree","tipFour","Workout","Exercise","src","alt","Description","CardRight","Home","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d5683e68.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport FitnessCenterIcon from '@mui/icons-material/FitnessCenter';\n\nfunction Header() {\n    return (\n        <Container>\n            <h1>GYM ROUTINE</h1>\n            <FitnessCenterIcon fontSize='medium' />\n            <Menu>\n                <p>Bench</p>\n                <p>Deadlift</p>\n                <p>Squat</p>\n                <p>Accessories</p>\n            </Menu>\n            <RightMenu>\n                <AccountCircleIcon />\n            </RightMenu>\n        </Container>\n    )\n}\n\nexport default Header\n\nconst Container = styled.div`\n    height: 50px;\n    position: fixed;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 8px 100px;\n    z-index: 1;\n    top: 0;\n    left: 0;\n    right: 0;\n    background-color: black;\n    opacity: 0.8;\n    color: white;\n\n    h1 {\n        opacity: 1;\n        font-size: x-large;\n    }\n`;\n\nconst Menu = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex: 1;\n    opacity: 1;\n\n    p {\n        font-weight: 400;\n        padding: 0 25px;\n        flex-wrap: no-wrap;\n        \n    }\n\n    @media(max-width: 768px) {\n        display:none;\n    }\n        cursor: pointer;\n`;\n\nconst RightMenu = styled.div`\n    display: flex;\n    align-items: center;\n    opacity: 1;\n    padding-left: 160px;\n    flex-wrap: no-wrap;\n    cursor: pointer;\n`;\n","import React from 'react'\nimport styled from 'styled-components';\nimport { Fade } from 'react-reveal';\n\nfunction Section({ backgroundImg, description, backgroundPosition }) {\n  return (\n    <Container bg={backgroundImg} ps={backgroundPosition}>\n      <Fade top>\n        <h1>{description}</h1>\n      </Fade>\n    </Container >\n  )\n}\n\nexport default Section\n\nconst Container = styled.div`\n  background-image: url(${props => props.bg});\n  background-size: cover;\n  background-position: ${props => props.ps === \"bottom\" ? \"bottom\" : \"center\"};\n  background-repeat: no-repeat;\n  height: 30vh;\n  width: 100vw;\n  overflow: hidden;\n\n  h1 {\n    text-align: center;\n    padding-top: 28px;\n    color: white;\n    font-style: italic;\n    font-weight: 400;\n  }\n`","import React, { useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport { Select, InputLabel, MenuItem, TextField, Button, FormControl, Box, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Collapse, Typography, IconButton } from '@mui/material';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\nimport PropTypes from 'prop-types';\nimport Fade from 'react-reveal/Fade';\n\n\nfunction Calculation() {\n    const [weight, setWeight] = useState('');\n    const [level, setLevel] = useState('');\n    const [bench, setBench] = useState(false);\n    const ref = useRef(null);\n\n    const handleChange = (event) => {\n        setLevel(event.target.value);\n    };\n\n    function getWeight(val) {\n        setWeight(val.target.value);\n    }\n\n    function computeData() {\n        setBench(Math.floor(weight * level));\n        ref.current?.scrollIntoView({ behavior: 'smooth' });\n    }\n\n    function calculateSets(sets, ratio) {\n        var workingSets = [];\n        var totalReps = [12, 12, 10, 10, 8];\n        var totalRatio = [0.7, 0.7, 0.4, 0.3, 0.3];\n        for (let i = 1; i <= sets; i++) {\n            workingSets.push({\n                sets: i,\n                exerciseWeight: weight !== '' ? Math.floor(weight * level * totalRatio[i - 1] * ratio) : \"NA\",\n                exerciseReps: totalReps[i - 1],\n            });\n        }\n\n        return workingSets;\n    }\n\n    function createData(exerciseName, exerciseSets, oneRepMax, ratio) {\n        return {\n            exerciseName,\n            exerciseSets,\n            oneRepMax,\n            ratio,\n            workingSet: calculateSets(3, ratio)\n        };\n    }\n\n    function createDataPower(exerciseName, exerciseSets, oneRepMax, ratio) {\n        return {\n            exerciseName,\n            exerciseSets,\n            oneRepMax,\n            ratio,\n            workingSet: calculateSets(exerciseSets, ratio)\n        };\n    }\n\n    function createDataHyper(exerciseName, exerciseSets, oneRepMax, ratio) {\n        return {\n            exerciseName,\n            exerciseSets,\n            oneRepMax,\n            ratio,\n            workingSet: calculateSets(exerciseSets, ratio)\n        };\n    }\n\n    function createDataDumbbell(exerciseName, exerciseSets, oneRepMax, ratio) {\n        return {\n            exerciseName,\n            exerciseSets,\n            oneRepMax,\n            ratio,\n            workingSet: calculateSets(exerciseSets, ratio)\n        };\n    }\n\n    function Row(props) {\n        const { row } = props;\n        const [open, setOpen] = React.useState(false);\n\n        return (\n            <React.Fragment>\n                <TableRow sx={{ '& > *': { borderBottom: 'unset' } }}>\n                    <TableCell align=\"left\">\n                        <IconButton\n                            aria-label=\"expand row\"\n                            size=\"small\"\n                            onClick={() => setOpen(!open)}\n                            sx={{ color: '#1976d2' }}\n                        >\n                            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n                        </IconButton>\n                    </TableCell>\n                    <TableCell component=\"th\" scope=\"row\">\n                        {row.exerciseName}\n                    </TableCell>\n                    <TableCell align=\"right\">{row.exerciseSets}</TableCell>\n                    <TableCell align=\"right\">{row.oneRepMax}</TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n                        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                            <Box sx={{ margin: 1 }}>\n                                <Typography variant=\"h6\" gutterBottom component=\"div\" fontStyle={'italic'}>\n                                    Workout Plan\n                                </Typography>\n                                <Table size=\"small\" aria-label=\"purchases\">\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell sx={{ fontWeight: 'bold' }}>Set</TableCell>\n                                            <TableCell sx={{ fontWeight: 'bold' }}>Weight&nbsp;(lbs)</TableCell>\n                                            <TableCell sx={{ fontWeight: 'bold' }} align=\"left\">Reps</TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {row.workingSet.map((workingSetRow) => (\n                                            <TableRow key={workingSetRow.sets}>\n                                                <TableCell component=\"th\" scope=\"row\">\n                                                    {workingSetRow.sets}\n                                                </TableCell>\n                                                <TableCell>{workingSetRow.exerciseWeight}</TableCell>\n                                                <TableCell align=\"left\">{workingSetRow.exerciseReps}</TableCell>\n                                            </TableRow>\n                                        ))}\n                                    </TableBody>\n                                </Table>\n                            </Box>\n                        </Collapse>\n                    </TableCell>\n                </TableRow>\n            </React.Fragment >\n        );\n\n    }\n\n    Row.propTypes = {\n        row: PropTypes.shape({\n            exerciseSets: PropTypes.number.isRequired,\n            ratio: PropTypes.number.isRequired,\n            oneRepMax: PropTypes.any.isRequired,\n            workingSet: PropTypes.arrayOf(\n                PropTypes.shape({\n                    exerciseReps: PropTypes.any.isRequired,\n                    exerciseWeight: PropTypes.any.isRequired,\n                    sets: PropTypes.number.isRequired,\n                }),\n            ).isRequired,\n            exerciseName: PropTypes.string.isRequired,\n            price: PropTypes.any,\n            protein: PropTypes.any,\n        }).isRequired,\n    };\n\n    const chest = [\n        createDataPower('Bench Press', 3, Math.floor(bench), 1),\n        createDataDumbbell('Incline Dumbbell Bench Press', 4, 'NA', .4),\n        createDataHyper('Machine Chest Fly', 3, 'NA', .6),\n    ];\n\n    const shoulders = [\n        createDataDumbbell('Dumbbell Shoulder Press', 3, 'NA', .3),\n        createDataDumbbell('Dumbbell Lateral Raise', 4, 'NA', .1),\n        createDataHyper('Machine Rear Delt Fly', 3, 'NA', .5),\n    ];\n\n    const arms = [\n        createDataDumbbell('Dumbbell Bicep Curls', 3, 'NA', .1),\n        createDataHyper('Tricep Pushdown', 3, 'NA', .3),\n        createData('Dumbbell Wrist Curl', 3, 'NA', .1),\n    ];\n\n    const back = [\n        createDataPower('Deadlift', 5, Math.floor(bench * 1.4), 1.45),\n        createDataHyper('Lat Pulldown', 4, 'NA', 1.5),\n        createData('Seated Cable Row', 4, 'NA', .5),\n    ];\n\n    const legs = [\n        createDataPower('Squat', 5, Math.floor(bench * 1.25), 1.2),\n        createDataHyper('Leg Extension', 4, 'NA', .5),\n        createDataHyper('Machine Calf Raise', 4, 'NA', .3),\n    ];\n\n    return (\n        <Container>\n            <Menu>\n                <Calc>\n                    <Fade bottom>\n                        <h1>Begin your fitness journey!</h1>\n                    </Fade>\n                    <HeightWeight>\n                        <Fade>\n                            <h2>Body Weight</h2>\n                        </Fade>\n                        <TextField id=\"outlined-basic\" label=\"lbs\" variant=\"outlined\" onChange={getWeight} />\n                        <Fade>\n                            <h2>Experience Level</h2>\n                        </Fade>\n                        <Box>\n                            <FormControl sx={{ m: 1, minWidth: 120 }}>\n                                <InputLabel id=\"experience-level\">Level</InputLabel>\n                                <Select\n                                    labelId=\"experience-level\"\n                                    id=\"select-level\"\n                                    value={level}\n                                    label=\"Level\"\n                                    onChange={handleChange}\n                                >\n                                    <MenuItem value={0.46}>Beginner</MenuItem>\n                                    <MenuItem value={0.74}>Novice</MenuItem>\n                                    <MenuItem value={1.11}>Intermediate</MenuItem>\n                                    <MenuItem value={1.55}>Advance</MenuItem>\n                                    <MenuItem value={2.03}>Elite</MenuItem>\n                                </Select>\n                            </FormControl>\n                        </Box>\n                    </HeightWeight>\n                    <Fade>\n                        <Button variant=\"contained\" onClick={() => computeData()}>Calculate Routine</Button>\n                    </Fade>\n                </Calc>\n            </Menu>\n            <BottomMenu ref={ref}>\n                <Fade top>\n                    <h1>Results</h1>\n                </Fade>\n                <Results>\n                    <Fade bottom>\n                        <TableContainer\n                            component={Paper}\n                            elevation={16}\n                            sx={{ marginBottom: '40px', width: '38vw' }}>\n                            <TableCell align=\"center\" sx={{\n                                fontWeight: 'bold',\n                                fontSize: 16,\n                            }}>\n                                Chest\n                            </TableCell>\n                            <Table aria-label=\"collapsible table\">\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell sx={{\n                                            fontWeight: 'bold',\n                                            fontSize: 16\n                                        }}></TableCell>\n                                        <TableCell sx={{ fontWeight: 'bold' }}>Exercise&nbsp;(s)</TableCell>\n                                        <TableCell sx={{ fontWeight: 'bold' }} align=\"right\">Sets</TableCell>\n                                        <TableCell sx={{ fontWeight: 'bold' }} align=\"right\">One Rep Max (lbs)</TableCell>\n                                        <TableCell />\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {chest.map((row) => (\n                                        <Row key={row.exerciseName} row={row} />\n                                    ))}\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                    </Fade>\n                    <Fade bottom>\n                        <TableContainer\n                            component={Paper}\n                            elevation={16}\n                            sx={{ marginBottom: '40px', width: '38vw' }}>\n                            <TableCell align=\"center\" sx={{\n                                fontWeight: 'bold',\n                                fontSize: 16\n                            }}>\n                                Shoulders\n                            </TableCell>\n                            <Table aria-label=\"collapsible table\">\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell sx={{\n                                            fontWeight: 'bold',\n                                            fontSize: 16\n                                        }}></TableCell>\n                                        <TableCell sx={{ fontWeight: 'bold' }}>Exercise&nbsp;(s)</TableCell>\n                                        <TableCell sx={{ fontWeight: 'bold' }} align=\"right\">Sets</TableCell>\n                                        <TableCell sx={{ fontWeight: 'bold' }} align=\"right\">One Rep Max (lbs)</TableCell>\n                                        <TableCell />\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {shoulders.map((row) => (\n                                        <Row key={row.exerciseName} row={row} />\n                                    ))}\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                    </Fade>\n                    <Fade bottom>\n                        <TableContainer\n                            component={Paper}\n                            elevation={16}\n                            sx={{ marginBottom: '40px', width: '38vw' }}>\n                            <TableCell align=\"center\" sx={{\n                                fontWeight: 'bold',\n                                fontSize: 16\n                            }}>\n                                Arms\n                            </TableCell>\n                            <Table aria-label=\"collapsible table\">\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell sx={{\n                                            fontWeight: 'bold',\n                                            fontSize: 16\n                                        }}></TableCell>\n                                        <TableCell sx={{ fontWeight: 'bold' }}>Exercise&nbsp;(s)</TableCell>\n                                        <TableCell sx={{ fontWeight: 'bold' }} align=\"right\">Sets</TableCell>\n                                        <TableCell sx={{ fontWeight: 'bold' }} align=\"right\">One Rep Max (lbs)</TableCell>\n                                        <TableCell />\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {arms.map((row) => (\n                                        <Row key={row.exerciseName} row={row} />\n                                    ))}\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                    </Fade>\n                    <Fade bottom>\n                        <TableContainer\n                            component={Paper}\n                            elevation={16}\n                            sx={{ marginBottom: '40px', width: '38vw' }}>\n                            <TableCell align=\"center\" sx={{\n                                fontWeight: 'bold',\n                                fontSize: 16\n                            }}>\n                                Back\n                            </TableCell>\n                            <Table aria-label=\"collapsible table\">\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell sx={{\n                                            fontWeight: 'bold',\n                                            fontSize: 16\n                                        }}></TableCell>\n                                        <TableCell sx={{ fontWeight: 'bold' }}>Exercise&nbsp;(s)</TableCell>\n                                        <TableCell sx={{ fontWeight: 'bold' }} align=\"right\">Sets</TableCell>\n                                        <TableCell sx={{ fontWeight: 'bold' }} align=\"right\">One Rep Max (lbs)</TableCell>\n                                        <TableCell />\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {back.map((row) => (\n                                        <Row key={row.exerciseName} row={row} />\n                                    ))}\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                    </Fade>\n                    <Fade bottom>\n                        <TableContainer\n                            component={Paper}\n                            elevation={16}\n                            sx={{ marginBottom: '20px', width: '38vw' }}>\n                            <TableCell align=\"center\" sx={{\n                                fontWeight: 'bold',\n                                fontSize: 16\n                            }}>\n                                Legs\n                            </TableCell>\n                            <Table aria-label=\"collapsible table\">\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell sx={{\n                                            fontWeight: 'bold',\n                                            fontSize: 16\n                                        }}></TableCell>\n                                        <TableCell sx={{ fontWeight: 'bold' }}>Exercise&nbsp;(s)</TableCell>\n                                        <TableCell sx={{ fontWeight: 'bold' }} align=\"right\">Sets</TableCell>\n                                        <TableCell sx={{ fontWeight: 'bold' }} align=\"right\">One Rep Max (lbs)</TableCell>\n                                        <TableCell />\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {legs.map((row) => (\n                                        <Row key={row.exerciseName} row={row} />\n                                    ))}\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                    </Fade>\n                </Results>\n            </BottomMenu>\n        </Container >\n    )\n}\n\nexport default Calculation\n\nconst Container = styled.div`\n    height: auto;\n    width: 100vw;\n    background-color: white;\n    overflow: hidden;\n    \n    h1 {\n        text-align: center;\n        color: white;\n        font-style: italic;\n        font-weight: 200;\n        font-size: 3em;\n    }\n`\n\nconst Menu = styled.div`\n    background-color: white;\n    width: auto;\n    padding: 0px 10vw;\n    padding-top: 120px;\n    padding-bottom: 80px;\n    text-align: center;\n    align-content: center;\n    justify-items: center;\n    background-image: url('https://s3.amazonaws.com/nikeinc/assets/80354/JustDoItHQ_20180620-JDIHQ-036_hd_1600.jpg?1529593278');\n    background-position: top;\n    background-size: cover;\n    background-repeat: no-repeat;\n\n    h1 {\n        margin-top: 0px;\n        text-align: center;\n    }\n`\nconst Calc = styled.div`\n    height: auto;\n    width: 40vw;\n    border-color: #f8f8f8;\n    border-style: solid;\n    border-radius: 5px;\n    border-width: 5px;\n    margin: 0 auto;\n    margin-top: 40px;\n    padding-bottom: 34px;\n    background-color: #f8f8f8;\n    \n    button {\n        margin-top: 40px;\n        font-size: 18px;\n    }\n\n    h1 {\n        color: black;\n        padding-top: 20px;\n        font-style: normal;\n        font-size: 2em;\n        font-weight: 400;\n    }\n`\n\nconst HeightWeight = styled.div`\n    height: auto;\n    width: auto;\n    background-color: #f8f8f8;\n    display: flex;\n    align-items: center;\n\n    h2 {\n        margin-right: 10px;\n        margin-left: 20px;\n        font-size: 16px;\n        text-align: center;\n    }\n\n    input {\n        margin-right: 20px;\n    }\n`\n\nconst BottomMenu = styled.div`\n    background-color: #f8f8f8;\n    width: auto;\n    height: auto;\n    padding: 60px 10vw;\n\n    h1 {\n        margin-top: 0px;\n        text-align: left;\n        color: black;\n        font-weight: 700;\n        font-size: 2.5em;\n    }\n`\n\nconst Results = styled.div`\n    width: auto;\n    height: auto;\n    text-align: center;\n    justify-content: center;\n    display: flex;\n    flex-wrap: wrap;\n    column-gap: 10px;\n    row-gap: 1em;\n    margin-bottom: 60px;\n\n    h1 {\n        margin-top: 0px;\n        text-align: left;\n        color: black;\n        font-weight: 700;\n        font-size: 2.5em;\n    }\n`\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Fade } from 'react-reveal';\n\nfunction CardLeft({ exerciseImage, exercise, tipOne, tipTwo, tipThree, tipFour }) {\n    return (\n        <Container>\n            <Workout>\n                <Fade bottom>\n                    <Exercise>\n                        <img src={exerciseImage} alt=\"\" />\n                    </Exercise>\n                </Fade>\n                <Fade bottom>\n                    <Description>\n                        <h2>{exercise}</h2>\n                        <p>{tipOne}</p>\n                        <p>{tipTwo}</p>\n                        <p>{tipThree}</p>\n                        <p>{tipFour}</p>\n                    </Description>\n                </Fade>\n            </Workout>\n        </Container>\n\n    )\n}\n\nexport default CardLeft\n\nconst Container = styled.div`\n    height: auto;\n    width: 100vw;\n    background-color: #111111;\n    overflow: hidden;\n    padding-top: 20px;\n    padding-bottom: 20px;\n    box-shadow: 0px 0px 100px 100px #111111;\n    \n    h1 {\n        text-align: center;\n        color: f1f1f1;\n    }\n`\n\nconst Workout = styled.div`\n    height: auto;\n    width: auto;\n    overflow: hidden;\n    display: flex;\n    justify-content: center;\n    background-color: #111111;\n`\nconst Exercise = styled.div`\n    height: 40vh;\n    width: 40vw;\n    overflow: hidden;\n    text-align: center;\n    margin-right: 80px;\n\n    img {\n        height: 100%;\n        width: 100%;\n        object-fit: cover;\n\n        @media screen and (max-width: 600px){\n            display: none;\n        }\n    }\n`\n\nconst Description = styled.div`\n    height: 40vh;\n    width: 40vw;\n    overflow: hidden;\n    text-align: center;\n    background-color: #111111;\n\n    h2 {\n        color: #eeeeee;\n        padding-top: 10px;\n        font-weight: 350;\n    }\n\n    p {\n        color: #bebebe;\n        text-align: middle;\n        font-style: italic;\n    }\n\n    @media screen and (max-width: 600px){\n        margin-right: 55vw;\n    }\n`\n\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Fade } from 'react-reveal';\n\nfunction CardRight({ exerciseImage, exercise, tipOne, tipTwo, tipThree, tipFour }) {\n    return (\n        <Container>\n            <Workout>\n                <Fade bottom>\n                    <Description>\n                        <h2>{exercise}</h2>\n                        <p>{tipOne}</p>\n                        <p>{tipTwo}</p>\n                        <p>{tipThree}</p>\n                        <p>{tipFour}</p>\n                    </Description>\n                </Fade>\n                <Fade bottom>\n                    <Exercise>\n                        <img src={exerciseImage} alt=\"\" />\n                    </Exercise>\n                </Fade>\n            </Workout>\n        </Container>\n\n    )\n}\n\nexport default CardRight\n\nconst Container = styled.div`\n    height: auto;\n    width: 100vw;\n    background-color: #111111;\n    overflow: hidden;\n    \n    h1 {\n        text-align: center;\n        color: white;\n    }\n`\n\nconst Workout = styled.div`\n    height: auto;\n    width: auto;\n    overflow: hidden;\n    display: flex;\n    justify-content: center;\n    background-color: #111111;\n`\nconst Exercise = styled.div`\n    height: 40vh;\n    width: 40vw;\n    overflow: hidden;\n    text-align: center;\n\n    img {\n        height: 100%;\n        width: 100%;\n        object-fit: cover;\n\n        @media screen and (max-width: 600px){\n            display: none;\n        }\n    }\n`\n\nconst Description = styled.div`\n    height: 40vh;\n    width: 40vw;\n    overflow: hidden;\n    text-align: center;\n    margin-right: 80px;\n\n    h2 {\n        color: #eeeeee;\n        padding-top: 10px;\n        font-weight: 350;\n    }\n    p {\n        color: #bebebe;\n        text-align: middle;\n        font-style: italic;\n    }\n\n    @media screen and (max-width: 600px){\n        margin-left: 55vw;\n    }\n`\n\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Header from \"./Header\";\nimport Section from \"./Section\";\nimport Calculation from \"./Calculation\";\nimport CardLeft from \"./CardLeft\";\nimport CardRight from \"./CardRight\";\n\nfunction Home() {\n  return (\n    <Container>\n      <Header />\n      <Calculation />\n      <Section backgroundImg={'https://s3.amazonaws.com/nikeinc/assets/80354/JustDoItHQ_20180620-JDIHQ-036_hd_1600.jpg?1529593278'} description={'Tips & Recommendations'} />\n      <CardLeft\n        exerciseImage={'https://miro.medium.com/max/1200/1*KJDDbsvhoAxP1JmAsCMKjA.jpeg'}\n        exercise={'Bench Press'}\n        tipOne={'\"Five Points of Contact\" -  head, shoulders, upperback, glutes, feet'}\n        tipTwo={'Grip the barbell slighlty wider than should-width apart'} tipThree={'Slightly squeeze elbow togther during the decline, and slightly flare elbow during the incline'}>\n      </CardLeft>\n      <CardRight\n        exerciseImage={'https://images.ctfassets.net/3s5io6mnxfqz/5bfSnUJeDm1RW7y1P5Zxzm/12e1144f62e7cd723c739d14291aced8/AdobeStock_402284878_2.jpeg?fm=jpg&w=900&fl=progressive'}\n        exercise={'Incline Dumbbell Bench Press'}\n        tipOne={'Set incline to 30\\u00b0 or lower for optimal upper chest development'}\n        tipTwo={'Keep elbow at 90\\u00b0 bend at the bottom of the movement'}\n        tipThree={'Do not lock out the elbows at the top of the movement'}>\n      </CardRight>\n      <CardLeft\n        exerciseImage={'https://www.verywellfit.com/thmb/x-u5wW77XNnyKavPOzkW8DHoitg=/2121x1414/filters:fill(FFDB5D,1)/serious-man-training-upper-body-using-fly-machine-1060869384-0effce7eff3044289055fcd16a9c6788.jpg'}\n        exercise={'Machine Chest Fly'}\n        tipOne={'Place arms at chest level'}\n        tipTwo={'Hands together at the top of the movement'}>\n      </CardLeft>\n      <CardRight\n        exerciseImage={'https://image.boxrox.com/2021/10/Incline-dumbbell-press-scaled-e1635241695936.jpg'}\n        exercise={'Dumbbell Shoulder Press'}\n        tipOne={'Elbows at 90\\u00b0 or slightly lower at the bottom of the movement'}\n        tipTwo={'Avoid locking out at the top of the movement where weights touch'}\n        tipThree={'Utilize legs to assist dumbbell placement at the beginning of the exercise'}>\n      </CardRight>\n      <CardLeft\n        exerciseImage={'https://hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/young-man-lifting-weights-at-gym-royalty-free-image-1597140869.jpg?crop=1.00xw:0.930xh;0,0.0699xh&resize=640:*'}\n        exercise={'Dumbbell Lateral Raise'}\n        tipOne={'Form does not have to be strict when pushed pass failure'}\n        tipThree={'Recommend standing during the movemnt'}>\n      </CardLeft>\n      <CardRight\n        exerciseImage={'https://i.ytimg.com/vi/6yMdhi2DVao/maxresdefault.jpg'} exercise={'Machine Rear Delt Fly'}\n        tipOne={'Rear delts are over neglected'}\n        tipTwo={'Hand position is preference, the most comfortable'}\n        tipThree={'Slightly bend elbows'}>\n      </CardRight>\n      <CardLeft\n        exerciseImage={'https://cdn.mos.cms.futurecdn.net/PUh4gpdENASaQybBDXAgPj-1024-80.jpg.webp'}\n        exercise={'Dumbbell Bicep Curls'}\n        tipOne={'Maintain straight posture at all times and do not lean backwards'}\n        tipTwo={'Breaking form only done when passed failure'}>\n      </CardLeft>\n      <CardRight\n        exerciseImage={'https://onnitacademy.imgix.net/wp-content/uploads/2020/05/pushdownopener.jpg'}\n        exercise={'Tricep Pushdown'}\n        tipOne={'Lean forward'}\n        tipTwo={'Lock out at full extension'}\n        tipThree={'Elbows slightly above 45\\u00b0 at the top of the movement'}>\n      </CardRight>\n      <CardLeft\n        exerciseImage={'https://www.muscleandfitness.com/wp-content/uploads/2018/04/1109-seated-wrist-curls.jpg?w=1100&quality=86&strip=all'}\n        exercise={'Dumbbell Wrist Curl'}\n        tipOne={'Overload by adding weight or reps over time'}\n        tipTwo={'Isolating single joint'}\n        tipThree={'Face palm down to perform wrist extensions'}>\n      </CardLeft>\n      <CardRight\n        exerciseImage={'https://cdn.shopify.com/s/files/1/1228/5232/files/DSC06092_480x480.jpg?v=1616700341'}\n        exercise={'Deadlift'}\n        tipOne={'Recommend double over hand grip to avoid muscle imbalances'}\n        tipTwo={'Conventional vs Sumo - choose most comfortable'}\n        tipThree={'Advise sumo deadlift for injury pervention, utilize more legs and less stress on the lower back'}>\n      </CardRight>\n      <CardLeft\n        exerciseImage={'https://image.boxrox.com/2021/10/lat-pulldown.webp'} exercise={'Lat Pulldown'}\n        tipOne={'Recommend over-hand grip'}\n        tipTwo={'1.5x shoulder width'}\n        tipThree={'Slightly lean backwards'}>\n      </CardLeft>\n      <CardRight\n        exerciseImage={'https://flo.health/media/1960/download/A%20woman%20doing%20seated%20cable%20row%20exercises.jpg?v=1'}\n        exercise={'Seated Cable Row'}\n        tipOne={'Utilize the chest supported row to avoid lower back strain'}\n        tipTwo={'Full range of motion'}>\n      </CardRight>\n      <CardLeft\n        exerciseImage={'https://images.ctfassets.net/3s5io6mnxfqz/34Npc5PKLKJi6HIYvFw9XI/3e45754912cf266e7401cb8074c63239/AdobeStock_386146138_2.jpeg?fm=jpg&w=900&fl=progressive'}\n        exercise={'Squat'}\n        tipOne={'Lower to parallel for an ideal range of motion'}\n        tipTwo={'Stance is preference, the wider the stance the more glute activation'}\n        tipThree={'Barbell placement higher to emphasize quads and lower for quads & glutes'}>\n      </CardLeft>\n      <CardRight\n        exerciseImage={'https://thefitnessmaverick.com/wp-content/uploads/2020/11/leg-extensions-bad-1024x683.jpg'}\n        exercise={'Leg Extension'}\n        tipOne={'Pause at the top of the movement'}\n        tipTwo={'Time under tension for 40 seconds'}\n        tipThree={'Foot position based on preference and comfortability'}>\n      </CardRight>\n      <CardLeft\n        exerciseImage={'https://www.muscleandfitness.com/wp-content/uploads/2017/08/1109-standing-calf-raise.jpg?w=1109&h=614&crop=1&quality=86&strip=all'}\n        exercise={'Calf Raise'}\n        tipOne={'Can be done sitting or standing'}\n        tipTwo={'Slow and strict technique at the start and \"cheat\" when passed failure'}>\n      </CardLeft>\n      <Section backgroundImg={'https://s3.amazonaws.com/nikeinc/assets/80354/JustDoItHQ_20180620-JDIHQ-036_hd_1600.jpg?1529593278'} backgroundPosition={'bottom'} />\n    </Container >\n  );\n}\n\nexport default Home;\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n`\n","import './App.css';\nimport Home from './components/Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}